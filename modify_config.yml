- name: Configure Jitsi Meet config files
  hosts: localhost
  become: yes
  vars:
    domain_name: [hostname]

  tasks:
  - name: Disallow insecure TLS V1.0, 1.1 or ciphers in turnserver
    lineinfile:
      path: /etc/turnserver.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertbefore: 'syslog'
      state: present
    with_items:
      - { regexp: 'no-tlsv1\n', line: 'no-tlsv1\n'}
      - { regexp: 'no-tlsv1_1\n', line: 'no-tlsv1_1\n'}
      - { regexp: 'cipher-list', line: 'cipher-list=ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384'}

  - name: Add long Diffie-Hellman key capability to turnserver.conf
    lineinfile:
      path: /etc/turnserver.conf
      regexp: 'dh2066'
      insertbefore: 'syslog'
      line: dh2066
      state: present

  - name: Secure SSL/TLS and ciphers for prosody
    blockinfile:
      path: /etc/prosody/conf.avail/{{ domain_name}}.cfg.lua
      marker: "-- {mark} Ansible managed SSL and ciphers Mozilla intermediate recommendations"
      insertafter: 'consider_bosh_secure = true;'
      state: present
      block: |
        ssl = {
          protocol = "tlsv1_2+";
          ciphers = "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CH$
        }

  - name: Allow only TLS 1.2 and 1.3 in nginx (based on Mozilla recommendations)
    lineinfile:
      path: /etc/nginx/sites-available/{{ domain_name }}.conf
      regexp: '    ssl_protocols'
      line: '    ssl_protocols TLSv1.2 TLSv1.3;'
      state: present

  - name: Use Mozilla recommended ciphers for nginx
    lineinfile:
      path: /etc/nginx/sites-available/{{ domain_name }}.conf
      regexp: '    ssl_ciphers '
      line: '    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;'
      state: present

  - name: Allow client to choose cipher, to increase performance
    lineinfile:
      path: /etc/nginx/sites-available/{{ domain_name }}.conf
      regexp: '    ssl_prefer_server_ciphers'
      line: '    ssl_prefer_server_ciphers off'
      state: present

   - name: nginx Strict-Transport-Security
        path: /etc/nginx/sites-available/{{ domain_name }}.conf
        regexp: '    add_header Strict-Transport-Security'
        line: '    add_header Strict-Transport-Security "max-age=63072000" always;'
        state: present

   - name: nginx config, session timeout, cache, tickets
     lineinfile:
       path: /etc/nginx/sites-available/{{ domain_name }}.conf
       regexp: "{{ item.regexp }}"
       line: "{{ item.line }}"
       state: present
       insertbefore: '    add_header Strict-Transport-Security'
     with_items:
       - { regexp: '    ssl_session_timeout 1d;', line: '    ssl_session_timeout 1d;'}
       - { regexp: '    ssl_session_cache shared:SSL:10m;', line: '    ssl_session_cache shared:SSL:10m;  \# about 40000 sessions' }
       - { regexp: '    ssl_session_tickets off;', line: '    ssl_session_tickets off;'}

   - name: nginx make secure DH Keys - must run openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
     lineinfile:
       path: /etc/nginx/sites-available/{{ domain_name }}.conf
       regexp: "{{ item.regexp }}"
       line: "{{ item.line }}"
       state: present
       insertafter: '    add_header Strict-Transport-Security'
     with_items:
       - { regexp: '    ssl_ecdh_curve secp384r1;', line: '    ssl_ecdh_curve secp384r1; \# Requires nginx >= 1.1.0' }
       - { regexp: '    ssl_dhparam /etc/ssl/certs/dhparam.pem;', line: '    ssl_dhparam /etc/ssl/certs/dhparam.pem;'}

  - name: Make Host Login
    lineinfile:
      path: /etc/prosody/conf.avail/{{ domain_name}}.cfg.lua
      insertafter: 'VirtualHost "{{ domain_name }}"'
      regexp: 'authentication = '
      line: 'authentication = "internal_hashed"'

  - name: Enable anonymous login method for guests:
    blockinfile:
      path: /etc/prosody/conf.avail/{{ domain_name}}.cfg.lua
      marker: "-- {mark} Ansible managed anonymous login"
      state: present
      block: |
        VirtualHost "guest.{{ domain_name}}"
            authentication = "anonymous"
            modules_enabled = {
              "turncredentials";
            }
            c2s_require_encryption = false


  - name: Make Host Login
    lineinfile:
      path: /etc/jitsi/meet/{{ domain_name }}-config.js
      insertafter: "^(\ *)domain: '{{ domain_name }}',"
      regexp: '^(\ *)anonymousdomain:'
      line: "        anonymousdomain: 'guest.{{ domain_name }}',"
